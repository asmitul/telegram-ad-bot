name: Deploy Telegram Bot

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: self-hosted
    
    env:
      DOCKER_IMAGE: ${{ vars.BOT_NAME }}
      CONTAINER_NAME: ${{ vars.BOT_NAME }}
      DATA_DIR: /var/telegram-bot/data

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Ensure data directory exists
      run: |
        sudo mkdir -p ${{ env.DATA_DIR }}
        sudo chown -R $(whoami):$(whoami) ${{ env.DATA_DIR }}

    - name: Build Docker image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE }} .

    - name: Stop existing container
      run: |
        docker stop ${{ env.CONTAINER_NAME }} || true
        docker rm ${{ env.CONTAINER_NAME }} || true

    - name: Deploy container
      env:
        TELEGRAM_BOT_TOKEN: ${{ vars.TELEGRAM_BOT_TOKEN }}
      run: |
        docker run -d \
          --name ${{ env.CONTAINER_NAME }} \
          --restart unless-stopped \
          -v ${{ env.DATA_DIR }}:/app/data \
          -e TELEGRAM_BOT_TOKEN=${{ vars.TELEGRAM_BOT_TOKEN }} \
          -e BOT_NAME=${{ vars.BOT_NAME }} \
          ${{ env.DOCKER_IMAGE }}

    - name: Cleanup old images
      run: |
        docker image prune -f